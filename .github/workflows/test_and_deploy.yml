name: tests

on: [push, pull_request]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: brainglobe/actions/lint@main

  test:
    needs: linting
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Run all supported Python versions on linux
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
        # Include one windows and macos run
        include:
        - os: macos-latest
          python-version: "3.9"
        - os: windows-latest
          python-version: "3.9"
    steps:
      - uses: brainglobe/actions/test@main
        with:
          python-version: ${{ matrix.python-version }}

  deploy-source:
    needs: test
    if: contains(github.ref, 'tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.x"
    - name: Publish source distribution dist to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
      run: |
        pip install twine
        python setup.py sdist
        twine upload dist/*


  deploy-linux-wheels:
    needs: test
    if: contains(github.ref, 'tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.2-manylinux2014_x86_64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39'
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
      run: |
        pip install twine
        twine upload dist/*-manylinux*.whl

  deploy-windows-wheels:
    needs: test
    if: contains(github.ref, 'tags')
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
          python-version: ${{ matrix.python-version }}
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
      run: |
        pip install twine wheel
        python setup.py bdist_wheel
        twine upload dist\*

  deploy-macos-wheels:
    needs: test
    if: contains(github.ref, 'tags')
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
          python-version: ${{ matrix.python-version }}
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
      run: |
        pip install twine wheel
        python setup.py bdist_wheel
        twine upload dist/*
