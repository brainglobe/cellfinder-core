name: Test and publish packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: brainglobe/actions/lint@v1

  test:
    needs: linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Run all supported Python versions on linux
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
        # Include one windows and macos run
        include:
        - os: macos-latest
          python-version: "3.9"
        - os: windows-latest
          python-version: "3.9"
    steps:
      - name: Cache tensorflow model
        uses: actions/cache@v3
        with:
          path: "~/.cellfinder"
          key: models-${{ hashFiles('~/.cellfinder/**') }}
      - uses: brainglobe/actions/test@v1
        with:
          python-version: ${{ matrix.python-version }}

  # Run cellfinder tests to make sure cellfinder is still compatible
  # with cellfinder-core
  test_cellfinder:
    name: Run cellfinder tests
    needs: linting
    runs-on: ubuntu-latest
    steps:
      - name: Cache tensorflow model
        uses: actions/cache@v3
        with:
          path: "~/.cellfinder"
          key: models-${{ hashFiles('~/.cellfinder/**') }}

      - name: Checkout cellfinder
        uses: actions/checkout@v3
        with:
          repository: 'brainglobe/cellfinder'

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          # Need to pin to .12 because of https://github.com/brainglobe/cellfinder/issues/207
          python-version: "3.9.12"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          # Install checked out copy of cellfinder
          python -m pip install .[dev]
          # Install the version cellfinder-core used to open this PR with
          python -m pip install git+${{ github.event.pull_request.head.repo.html_url }}@${{ github.event.pull_request.head.sha }}


      - name: Run cellfinder tests
        run: |
          python -m pytest

  build_sdist:
    name: Build source distribution
    needs: test
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
    - uses: brainglobe/actions/build_sdist@v1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: test
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:
    - uses: brainglobe/actions/build_wheels@v1

  upload_all:
    name: Publish build distributions
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.TWINE_API_KEY }}
